# Generated by Django 4.2 on 2024-11-11 15:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('TEMP_HIGH', 'Temperature Too High'), ('TEMP_LOW', 'Temperature Too Low'), ('POWER_OUT', 'Power Outage'), ('POWER_RESTORED', 'Power Restored')], max_length=20)),
                ('severity', models.IntegerField(choices=[(1, 'Low'), (2, 'Medium'), (3, 'High')])),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Incident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('acknowledged', 'Acknowledged'), ('resolved', 'Resolved'), ('closed', 'Closed')], default='active', max_length=20)),
                ('alert_count', models.IntegerField(default=1)),
                ('current_escalation_level', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='IncidentComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('action_taken', models.BooleanField(default=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='IncidentTimelineEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('event_type', models.CharField(choices=[('alert_created', 'Alert Created'), ('notification_sent', 'Notification Sent'), ('comment_added', 'Comment Added'), ('status_changed', 'Status Changed'), ('escalation_changed', 'Escalation Changed')], max_length=20)),
                ('description', models.TextField()),
                ('temperature', models.FloatField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Reading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device_id', models.CharField(default='default_device', help_text='Unique identifier for the monitoring device', max_length=100)),
                ('temperature', models.FloatField(validators=[django.core.validators.MinValueValidator(-10), django.core.validators.MaxValueValidator(50)])),
                ('humidity', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('power_status', models.BooleanField(default=True)),
                ('battery_level', models.FloatField(default=100, help_text='Battery level percentage (0-100)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.AddIndex(
            model_name='reading',
            index=models.Index(fields=['device_id', 'timestamp'], name='monitoring__device__aa54d5_idx'),
        ),
        migrations.AddField(
            model_name='incidenttimelineevent',
            name='incident',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timeline_events', to='monitoring.incident'),
        ),
    ]
